
import com.mongodb.BasicDBObject;
import com.mongodb.DBCollection;
import com.mongodb.DBCursor;
import com.mongodb.DBObject;

import java.awt.event.KeyEvent;
import javax.swing.JOptionPane;
import javax.swing.JPanel;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author Soniya
 */
public class Lipidprofiletest extends javax.swing.JFrame {

    private static Object jA;

    private static void add(Lipidprofiletest jA) {
        throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }

    /**
     * Creates new form thyroidTest
     */
    static String u = "";
    public Lipidprofiletest(String userr) {
        initComponents();
        u=userr;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lblT1 = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();
        lblT6 = new javax.swing.JLabel();
        lblT7 = new javax.swing.JLabel();
        lblT9 = new javax.swing.JLabel();
        lblT3 = new javax.swing.JLabel();
        lblT5 = new javax.swing.JLabel();
        lblT15 = new javax.swing.JLabel();
        lblT18 = new javax.swing.JLabel();
        lblT19 = new javax.swing.JLabel();
        lblT4 = new javax.swing.JLabel();
        lblT8 = new javax.swing.JLabel();
        lblT11 = new javax.swing.JLabel();
        lblT14 = new javax.swing.JLabel();
        jftTCh = new javax.swing.JFormattedTextField();
        jftLDL = new javax.swing.JFormattedTextField();
        jftTG = new javax.swing.JFormattedTextField();
        lblT10 = new javax.swing.JLabel();
        lblT12 = new javax.swing.JLabel();
        jftNONHDL = new javax.swing.JFormattedTextField();
        jftTC = new javax.swing.JFormattedTextField();
        lblT13 = new javax.swing.JLabel();
        jftLDLHDL = new javax.swing.JFormattedTextField();
        lblT16 = new javax.swing.JLabel();
        jftVLDL = new javax.swing.JFormattedTextField();
        lblT17 = new javax.swing.JLabel();
        jftHDL = new javax.swing.JFormattedTextField();
        lblT20 = new javax.swing.JLabel();
        lblT21 = new javax.swing.JLabel();
        lblT22 = new javax.swing.JLabel();
        lblT23 = new javax.swing.JLabel();
        lblT24 = new javax.swing.JLabel();
        lblT25 = new javax.swing.JLabel();
        lblT26 = new javax.swing.JLabel();
        lblT27 = new javax.swing.JLabel();
        lblT28 = new javax.swing.JLabel();
        lblT29 = new javax.swing.JLabel();
        jButtonSubmit = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        Lipid = new javax.swing.JTextArea();
        jButton1 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        lblT1.setFont(new java.awt.Font("Sylfaen", 1, 18)); // NOI18N
        lblT1.setForeground(new java.awt.Color(0, 102, 0));
        lblT1.setText("LIPID PROFILE TEST");

        lblT6.setFont(new java.awt.Font("Segoe UI Semilight", 1, 18)); // NOI18N
        lblT6.setText("Total Cholesterol");

        lblT7.setFont(new java.awt.Font("Segoe UI Semilight", 1, 18)); // NOI18N
        lblT7.setText("LDL Cholesterol - Direct");

        lblT9.setFont(new java.awt.Font("Segoe UI Semilight", 1, 18)); // NOI18N
        lblT9.setText("Triglycerides");

        lblT3.setFont(new java.awt.Font("Sylfaen", 1, 18)); // NOI18N
        lblT3.setForeground(new java.awt.Color(255, 0, 0));
        lblT3.setText("VALUE");

        lblT5.setFont(new java.awt.Font("Sylfaen", 1, 18)); // NOI18N
        lblT5.setForeground(new java.awt.Color(255, 0, 0));
        lblT5.setText("REFERENCE RANGE");

        lblT15.setFont(new java.awt.Font("Segoe UI Semilight", 1, 18)); // NOI18N
        lblT15.setText("125 - 200");

        lblT18.setFont(new java.awt.Font("Segoe UI Semilight", 1, 18)); // NOI18N
        lblT18.setText("85 - 130");

        lblT19.setFont(new java.awt.Font("Segoe UI Semilight", 1, 18)); // NOI18N
        lblT19.setText("25 - 200");

        lblT4.setFont(new java.awt.Font("Sylfaen", 1, 18)); // NOI18N
        lblT4.setForeground(new java.awt.Color(255, 0, 0));
        lblT4.setText("UNITS");

        lblT8.setFont(new java.awt.Font("Segoe UI Semilight", 1, 18)); // NOI18N
        lblT8.setText("mg/dl");

        lblT11.setFont(new java.awt.Font("Segoe UI Semilight", 1, 18)); // NOI18N
        lblT11.setText("mg/dl");

        lblT14.setFont(new java.awt.Font("Segoe UI Semilight", 1, 18)); // NOI18N
        lblT14.setText("Ratio");

        jftTCh.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jftTChActionPerformed(evt);
            }
        });
        jftTCh.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jftTChKeyPressed(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jftTChKeyTyped(evt);
            }
        });

        jftLDL.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter()));
        jftLDL.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jftLDLActionPerformed(evt);
            }
        });
        jftLDL.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jftLDLKeyTyped(evt);
            }
        });

        jftTG.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jftTGKeyTyped(evt);
            }
        });

        lblT10.setFont(new java.awt.Font("Segoe UI Semilight", 1, 18)); // NOI18N
        lblT10.setText("TC / HDL Cholesterol Ratio");

        lblT12.setFont(new java.awt.Font("Segoe UI Semilight", 1, 18)); // NOI18N
        lblT12.setText("LDL / HDL Ratio");

        jftNONHDL.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jftNONHDLKeyTyped(evt);
            }
        });

        jftTC.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jftTCActionPerformed(evt);
            }
        });
        jftTC.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jftTCKeyTyped(evt);
            }
        });

        lblT13.setFont(new java.awt.Font("Segoe UI Semilight", 1, 18)); // NOI18N
        lblT13.setText("Non - HDL Cholesterol");

        jftLDLHDL.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jftLDLHDLKeyTyped(evt);
            }
        });

        lblT16.setFont(new java.awt.Font("Segoe UI Semilight", 1, 18)); // NOI18N
        lblT16.setText("VLDL Cholesterol");

        jftVLDL.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jftVLDLKeyTyped(evt);
            }
        });

        lblT17.setFont(new java.awt.Font("Segoe UI Semilight", 1, 18)); // NOI18N
        lblT17.setText("HDL Cholesterol - Direct");

        jftHDL.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jftHDLActionPerformed(evt);
            }
        });
        jftHDL.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jftHDLKeyPressed(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jftHDLKeyTyped(evt);
            }
        });

        lblT20.setFont(new java.awt.Font("Segoe UI Semilight", 1, 18)); // NOI18N
        lblT20.setText("mg/dl");

        lblT21.setFont(new java.awt.Font("Segoe UI Semilight", 1, 18)); // NOI18N
        lblT21.setText("mg/dl");

        lblT22.setFont(new java.awt.Font("Segoe UI Semilight", 1, 18)); // NOI18N
        lblT22.setText("Ratio");

        lblT23.setFont(new java.awt.Font("Segoe UI Semilight", 1, 18)); // NOI18N
        lblT23.setText("mg/dl");

        lblT24.setFont(new java.awt.Font("Segoe UI Semilight", 1, 18)); // NOI18N
        lblT24.setText("mg/dl");

        lblT25.setFont(new java.awt.Font("Segoe UI Semilight", 1, 18)); // NOI18N
        lblT25.setText("35 - 80");

        lblT26.setFont(new java.awt.Font("Segoe UI Semilight", 1, 18)); // NOI18N
        lblT26.setText("5 - 40");

        lblT27.setFont(new java.awt.Font("Segoe UI Semilight", 1, 18)); // NOI18N
        lblT27.setText("3.0 - 5.0");

        lblT28.setFont(new java.awt.Font("Segoe UI Semilight", 1, 18)); // NOI18N
        lblT28.setText("1.5 - 3.5");

        lblT29.setFont(new java.awt.Font("Segoe UI Semilight", 1, 18)); // NOI18N
        lblT29.setText("<160");

        jButtonSubmit.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        jButtonSubmit.setForeground(new java.awt.Color(0, 204, 0));
        jButtonSubmit.setText("Submit");
        jButtonSubmit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonSubmitActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Sylfaen", 1, 14)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(0, 204, 0));
        jLabel1.setText("Test Results:");

        Lipid.setColumns(20);
        Lipid.setRows(5);
        Lipid.setEnabled(false);
        jScrollPane2.setViewportView(Lipid);

        jButton1.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jButton1.setForeground(new java.awt.Color(0, 153, 0));
        jButton1.setText("Back");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                                .addGap(405, 405, 405)
                                                .addComponent(jftNONHDL, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE))
                                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                                    .addComponent(lblT17, javax.swing.GroupLayout.Alignment.LEADING)
                                                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                                        .addComponent(lblT9, javax.swing.GroupLayout.PREFERRED_SIZE, 211, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                        .addGap(194, 194, 194)
                                                        .addComponent(jftTG, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                                .addGroup(layout.createSequentialGroup()
                                                    .addComponent(lblT10)
                                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                    .addComponent(jftTC, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                .addComponent(lblT7, javax.swing.GroupLayout.PREFERRED_SIZE, 211, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addGroup(layout.createSequentialGroup()
                                                    .addComponent(lblT12, javax.swing.GroupLayout.PREFERRED_SIZE, 318, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                    .addComponent(jftLDLHDL, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                                    .addComponent(jftHDL, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                                        .addComponent(lblT6)
                                                        .addGap(257, 257, 257)
                                                        .addComponent(jftTCh, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                    .addComponent(jftLDL, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                .addComponent(jftVLDL, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                .addComponent(lblT21)
                                                .addComponent(lblT11)
                                                .addComponent(lblT14, javax.swing.GroupLayout.Alignment.TRAILING)
                                                .addComponent(lblT22, javax.swing.GroupLayout.Alignment.TRAILING))
                                            .addGroup(layout.createSequentialGroup()
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                        .addComponent(lblT8)
                                                        .addComponent(lblT20))
                                                    .addComponent(lblT4)
                                                    .addComponent(lblT23)
                                                    .addComponent(lblT24))
                                                .addGap(4, 4, 4)
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                    .addGroup(layout.createSequentialGroup()
                                                        .addGap(54, 54, 54)
                                                        .addComponent(lblT5, javax.swing.GroupLayout.PREFERRED_SIZE, 205, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                    .addGroup(layout.createSequentialGroup()
                                                        .addGap(93, 93, 93)
                                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                                            .addComponent(lblT19)
                                                            .addComponent(lblT15)
                                                            .addComponent(lblT18)
                                                            .addComponent(lblT25)
                                                            .addComponent(lblT27)
                                                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                                .addComponent(lblT26)
                                                                .addComponent(lblT28)
                                                                .addComponent(lblT29))))))))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(406, 406, 406)
                                        .addComponent(lblT3, javax.swing.GroupLayout.PREFERRED_SIZE, 131, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(353, 353, 353)))
                                .addGap(200, 200, 200))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(lblT1, javax.swing.GroupLayout.PREFERRED_SIZE, 449, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                        .addComponent(jSeparator1, javax.swing.GroupLayout.DEFAULT_SIZE, 1, Short.MAX_VALUE)
                        .addContainerGap())
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblT16, javax.swing.GroupLayout.PREFERRED_SIZE, 318, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(lblT13, javax.swing.GroupLayout.PREFERRED_SIZE, 318, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jButtonSubmit, javax.swing.GroupLayout.PREFERRED_SIZE, 128, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 127, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 257, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(237, 237, 237))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblT1, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblT3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(lblT5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(lblT4))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jftTCh, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(lblT6, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(lblT8)
                                .addComponent(lblT15)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblT17, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblT20)
                            .addComponent(lblT25)
                            .addComponent(jftHDL, javax.swing.GroupLayout.DEFAULT_SIZE, 41, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(lblT7, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(lblT11)
                                    .addComponent(lblT18))
                                .addGap(12, 12, 12))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(jftLDL, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(3, 3, 3)))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(lblT9, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(lblT21)
                                    .addComponent(lblT19))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(lblT27))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(11, 11, 11)
                                .addComponent(jftTG, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(lblT10, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(lblT22)
                                    .addComponent(jftTC, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblT12, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblT14)
                            .addComponent(lblT28)
                            .addComponent(jftLDLHDL, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblT16, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblT23)
                            .addComponent(lblT26)
                            .addComponent(jftVLDL, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(15, 15, 15)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblT13, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblT24)
                            .addComponent(lblT29)
                            .addComponent(jftNONHDL, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(14, 14, 14)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel1)
                                    .addComponent(jButtonSubmit, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(417, 417, 417))))
        );

        setBounds(0, 0, 917, 772);
    }// </editor-fold>//GEN-END:initComponents

    private void jftTChActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jftTChActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jftTChActionPerformed

    private void jftTChKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jftTChKeyTyped
        char c=evt.getKeyChar();
      if((!Character.isDigit(c)) || (c==KeyEvent.VK_BACK_SPACE) || (c==KeyEvent.VK_DELETE))
      {
      getToolkit().beep();
      evt.consume();
      } 
    }//GEN-LAST:event_jftTChKeyTyped

    private void jftLDLKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jftLDLKeyTyped
         char d=evt.getKeyChar();
      if((!Character.isDigit(d)) || (d==KeyEvent.VK_BACK_SPACE) || (d==KeyEvent.VK_DELETE))
      {
      getToolkit().beep();
      evt.consume();
      }
    }//GEN-LAST:event_jftLDLKeyTyped

    private void jftTGKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jftTGKeyTyped
         char e=evt.getKeyChar();
      if((!Character.isDigit(e)) || (e==KeyEvent.VK_BACK_SPACE) || (e==KeyEvent.VK_DELETE))
      {
          
      getToolkit().beep();
      evt.consume();
      }
    }//GEN-LAST:event_jftTGKeyTyped

    private void jftTChKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jftTChKeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_jftTChKeyPressed

    private void jftNONHDLKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jftNONHDLKeyTyped
char j=evt.getKeyChar();
      if((!Character.isDigit(j)) || (j==KeyEvent.VK_BACK_SPACE) || (j==KeyEvent.VK_DELETE))
      {
      getToolkit().beep();
      evt.consume();
      } 
            // TODO add your handling code here:
    }//GEN-LAST:event_jftNONHDLKeyTyped

    private void jftTCKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jftTCKeyTyped
      char f=evt.getKeyChar();
      if((!Character.isDigit(f)) || (f==KeyEvent.VK_BACK_SPACE) || (f==KeyEvent.VK_DELETE))
      {
      getToolkit().beep();
      evt.consume();
      } 
             // TODO add your handling code here:
    }//GEN-LAST:event_jftTCKeyTyped

    private void jftLDLHDLKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jftLDLHDLKeyTyped
      char h=evt.getKeyChar();
      if((!Character.isDigit(h)) || (h==KeyEvent.VK_BACK_SPACE) || (h==KeyEvent.VK_DELETE))
      {
      getToolkit().beep();
      evt.consume();
      } 
            // TODO add your handling code here:
    }//GEN-LAST:event_jftLDLHDLKeyTyped

    private void jftVLDLKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jftVLDLKeyTyped
      char i=evt.getKeyChar();
      if((!Character.isDigit(i)) || (i==KeyEvent.VK_BACK_SPACE) || (i==KeyEvent.VK_DELETE))
      {
      getToolkit().beep();
      evt.consume();
      }        // TODO add your handling code here:
    }//GEN-LAST:event_jftVLDLKeyTyped

    private void jftHDLActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jftHDLActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jftHDLActionPerformed

    private void jftHDLKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jftHDLKeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_jftHDLKeyPressed

    private void jftHDLKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jftHDLKeyTyped
      char g=evt.getKeyChar();
      if((!Character.isDigit(g)) || (g==KeyEvent.VK_BACK_SPACE) || (g==KeyEvent.VK_DELETE))
      {
      getToolkit().beep();
      evt.consume();
      } 
             // TODO add your handling code here:
    }//GEN-LAST:event_jftHDLKeyTyped

    private void jButtonSubmitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonSubmitActionPerformed
      Connect j = new Connect();
    
      int flag=0;
        
       String result="";
       String user="";
       String fnm="";
       String lnm="";
      DBCollection dbc=j.connect("login_details");
      DBCollection dbc1=j.connect("Report");
      DBCollection dbc2=j.connect("Lipid_Profile_Test");
      BasicDBObject bdb=new BasicDBObject();
       String t1,t2,t3,t4,t5,t6,t7,t8;
               String resultt = "";
        
       t1=jftTCh.getText();
       t2=jftHDL.getText();
       t3=jftLDL.getText();
       t4=jftTG.getText();
       t5=jftTC.getText();
       t6=jftLDLHDL.getText();
       t7=jftVLDL.getText();
       t8=jftNONHDL.getText();
       
       bdb.put("Total Cholesterol",t1);
       bdb.put("HDL Cholesterol",t2);
       bdb.put("LDL Cholesterol",t3);
       bdb.put("Triglycerides",t4);
       bdb.put("TC/HDL Cholesterol",t5);
       bdb.put("LDL/HDL",t6);
       bdb.put("VLDL",t7);
       bdb.put("Non-HDL Cholesterol",t8);
       dbc2.insert(bdb);
       
        
     
        BasicDBObject bdb1=new BasicDBObject();
      BasicDBObject bdb2=new BasicDBObject();
      DBCursor cursor = dbc.find();
       
        
       
         BasicDBObject search = new BasicDBObject();
      BasicDBObject newQ = new BasicDBObject();
     BasicDBObject newP=new BasicDBObject();
   //BasicDBObject d = new BasicDBObject();
   if(jftTCh.getText().trim().length() == 0 || jftHDL.getText().trim().length() == 0 || jftLDL.getText().trim().length() == 0 || jftTG.getText().trim().length() == 0 ||
           jftTC.getText().trim().length() == 0 || jftLDLHDL.getText().trim().length() == 0 || jftVLDL.getText().trim().length() == 0 || jftNONHDL.getText().trim().length() == 0)
  {
  JOptionPane.showMessageDialog(null,"Enter all test values");
  }
    else
   {
        float a = Float.parseFloat(jftTCh.getText());
      float b = Float.parseFloat(jftHDL.getText());
      float c = Float.parseFloat(jftLDL.getText());
      float d = Float.parseFloat(jftTG.getText());
      float e = Float.parseFloat(jftTC.getText());
      float g = Float.parseFloat(jftVLDL.getText());
     while(cursor.hasNext())     
                {
                    DBObject obj = cursor.next();                    
                   user=(String)obj.get("Email");
                   if(u.equals(user))
                   {
                     fnm=(String)obj.get("Fname");  
                     lnm=(String)obj.get("Lname");  
                    
                   }   
                   }
                    
              DBCursor cursor2 = dbc1.find();
              while(cursor2.hasNext())     
              {
                  DBObject obj2 = cursor2.next();
                   
                    
                 
                  user=(String)obj2.get("Email");
                   if(u.equals(user)){
                       //d=(String)obj2.get("Dengue");
                       //System.out.println("1");
                          if(obj2.containsKey("Lipid_Profile"))
                       {
                          
                       BasicDBObject searchQuery = new BasicDBObject("Email",u);
                        BasicDBObject updateFields = new BasicDBObject();
                         updateFields.append("Total Cholesterol",t1);
       updateFields.append("HDL Cholesterol",t2);
       updateFields.append("LDL Cholesterol",t3);
       updateFields.append("Triglycerides",t4);
       updateFields.append("TC/HDL Cholesterol",t5);
       updateFields.append("LDL/HDL",t6);
       updateFields.append("VLDL",t7);
       updateFields.append("Non-HDL Cholesterol",t8);
                       
                        BasicDBObject setQuery = new BasicDBObject();
                        setQuery.append("$set", updateFields);
                        dbc1.update(searchQuery, setQuery);
                        flag=1;
                        break;
                       }
                       else
                       {
                            
                        search.append("Email",u );
                       newQ.put("$set", new BasicDBObject().append("Lipid_Profile", "5"));
                       dbc1.update(search, newQ); 
                        search.append("Email",u );
                       newQ.put("$set", new BasicDBObject().append("Total Cholesterol",t1));
                       dbc1.update(search, newQ);
                        search.append("Email",u );
                       newQ.put("$set", new BasicDBObject().append("HDL Cholesterol",t2));
                       search.append("Email",u );
                       newQ.put("$set", new BasicDBObject().append("LDL Cholesterol",t3));
                       dbc1.update(search, newQ);
                       search.append("Email",u );
                       newQ.put("$set", new BasicDBObject().append("Triglycerides",t4));
                       dbc1.update(search, newQ);
                       search.append("Email",u );
                       newQ.put("$set", new BasicDBObject().append("TC/HDL Cholesterol",t5));
                       dbc1.update(search, newQ);
                        search.append("Email",u );
                       newQ.put("$set", new BasicDBObject().append("LDL/HDL",t6));
                       dbc1.update(search, newQ);
                        search.append("Email",u );
                       newQ.put("$set", new BasicDBObject().append("VLDL",t7));
                       dbc1.update(search, newQ);
                         search.append("Email",u );
                       newQ.put("$set", new BasicDBObject().append("Non-HDL Cholesterol",t8));
                       dbc1.update(search, newQ);
                       
                       
                       flag=1;
                        break;
                       }
                     
                       
                    }              
              }        
          
                   if(flag==0)    
                   {
                    //System.out.println("4");
                      newQ.put("Fname",fnm);
                      newQ.put("Lname",lnm); 
                      newQ.put("Email",u);
                      newQ.put("Lipid_Profile","5"); 
                       newQ.put("Total Cholesterol",t1);
       newQ.put("HDL Cholesterol",t2);
       newQ.put("LDL Cholesterol",t3);
       newQ.put("Triglycerides",t4);
       newQ.put("TC/HDL Cholesterol",t5);
       newQ.put("LDL/HDL",t6);
       newQ.put("VLDL",t7);
       newQ.put("Non-HDL Cholesterol",t8);
                     
                        dbc1.insert(newQ); 
                     
        }
       
       
       
       dbc.insert(bdb);
     
    //    int h = Integer.parseInt(jftNONHDL.getText());
      if(a>200) 
      {
          result = result.concat("Total Cholesterol is high");
          Lipid.setText(result);
          
      }   
      else if(a<125) {
          result = result.concat("Total Cholesterol is low"); 
          Lipid.setText(result);   
      }
      else {
          result = result.concat("Total Cholesterol is normal");
          Lipid.setText(result);
      }
      
       if(b>80) 
      {
          result = result.concat("\nHDL Cholesterol is high");
          Lipid.setText(result);
      }   
      else if(b<35) {
          result = result.concat("\nHDL Cholesterol is low. It indicates a risk for heart disease");
          Lipid.setText(result);   
      }
      else {
           
          result = result.concat("\nHDL Cholesterol is normal");
          Lipid.setText(result);
      }
       
        if(c>130) 
      {
          result = result.concat("\nLDL Cholesterol is high. It indicates a possible heart disease or increased blood pressure");
          Lipid.setText(result);
      }   
      else if(c<85) {
            result = result.concat("\nLDL Cholesterol is low");
           Lipid.setText(result);   
      }
      else {
          
         result = result.concat("\nLDL Cholesterol is normal");
         Lipid.setText(result);
      }
        
         if(d>200) 
      {
          result = result.concat("\nTriglycerides is high");
          Lipid.setText(result);
      }   
      else if(d<25) {
          result = result.concat("\nTriglycerides is low"); 
          Lipid.setText(result);   
      }
      else {
          result = result.concat("\nTriglycerides is normal");
          Lipid.setText(result);
      }
         
          if(e>5) 
      {
          result = result.concat("\nTotal Cholesterol/HDL is high");
          Lipid.setText(result);
      }   
      else if(e<3) {
          result = result.concat("\nTotal Cholesterol/HDL is low");
          Lipid.setText(result);   
      }
      else {
          result = result.concat("\nTotal Cholesterol/HDL is normal");
          Lipid.setText(result);
      }
          
           if(g>40) 
      {
          result = result.concat("\nVLDL Cholesterol is high. \nThere's more probability of heart attack or heart stroke");
          Lipid.setText(result);
      }   
      else if(g<5) {
          result = result.concat("\nVLDL Cholesterol is low"); 
          Lipid.setText(result);   
      }
      else {
          result = result.concat("\nVLDL Cholesterol is normal");
          Lipid.setText(result);
      }
          
     
    
           
         // final JPanel p2=new JPanel();
        //final JOptionPane jo=new JOptionPane();
 
                                         
        
      }// TODO add your handling code here:
    }//GEN-LAST:event_jButtonSubmitActionPerformed

    private void jftLDLActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jftLDLActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jftLDLActionPerformed

    private void jftTCActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jftTCActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jftTCActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
         menuPage mp=new menuPage(u);
        mp.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_jButton1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Lipidprofiletest.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Lipidprofiletest.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Lipidprofiletest.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Lipidprofiletest.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> {
            new Lipidprofiletest(u).setVisible(true);
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextArea Lipid;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButtonSubmit;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JFormattedTextField jftHDL;
    private javax.swing.JFormattedTextField jftLDL;
    private javax.swing.JFormattedTextField jftLDLHDL;
    private javax.swing.JFormattedTextField jftNONHDL;
    private javax.swing.JFormattedTextField jftTC;
    private javax.swing.JFormattedTextField jftTCh;
    private javax.swing.JFormattedTextField jftTG;
    private javax.swing.JFormattedTextField jftVLDL;
    private javax.swing.JLabel lblT1;
    private javax.swing.JLabel lblT10;
    private javax.swing.JLabel lblT11;
    private javax.swing.JLabel lblT12;
    private javax.swing.JLabel lblT13;
    private javax.swing.JLabel lblT14;
    private javax.swing.JLabel lblT15;
    private javax.swing.JLabel lblT16;
    private javax.swing.JLabel lblT17;
    private javax.swing.JLabel lblT18;
    private javax.swing.JLabel lblT19;
    private javax.swing.JLabel lblT20;
    private javax.swing.JLabel lblT21;
    private javax.swing.JLabel lblT22;
    private javax.swing.JLabel lblT23;
    private javax.swing.JLabel lblT24;
    private javax.swing.JLabel lblT25;
    private javax.swing.JLabel lblT26;
    private javax.swing.JLabel lblT27;
    private javax.swing.JLabel lblT28;
    private javax.swing.JLabel lblT29;
    private javax.swing.JLabel lblT3;
    private javax.swing.JLabel lblT4;
    private javax.swing.JLabel lblT5;
    private javax.swing.JLabel lblT6;
    private javax.swing.JLabel lblT7;
    private javax.swing.JLabel lblT8;
    private javax.swing.JLabel lblT9;
    // End of variables declaration//GEN-END:variables

   /* private static class Lipidprofiletest {

        public Lipidprofiletest() {
        }*/

        private void append(String hello_World) {
            throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
        }

        private void setText(String hello_World) {
            throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
        }
    }

